version: 1.1
type: install
name: Open Liberty in Kubernetes
baseUrl: https://github.com/vlobzakov/openliberty/raw/master
logo: /images/open-liberty-logo.png
description: 
	text: /texts/description.md
	short: Example of Open Liberty deployment on top of Kubernetes cluster.

settings:
  fields:
    - caption: Environment
      type: envname
      name: envName
      dependsOn: region
      randomName: true
      showFullDomain: true
      required: true

    - caption: Display Name
      type: string
      name: dispName
      default: Open Liberty
      required: true

    - caption: Region
      type: regionlist
      name: region
      disableInactive: true
      selectFirstAvailable: true
      filter:
        type: ["vz7"]
        isActive: true      

onInstall:
  - script: return {result:0, envGroups:eval('(' + MANIFEST + ')').envGroups, ssl:jelastic.billing.account.GetQuotas('environment.jelasticssl.enabled')}  
  - install: 
      jps: https://raw.githubusercontent.com/jelastic-jps/kubernetes/master/manifest.jps?_r=${fn.random}
      envName: ${settings.envName}
      envGroups: ${response.envGroups}
      region: ${settings.region}
      displayName: ${settings.dispName}
      ssl: ${response.ssl}
      settings:
        worker: 2
        storage: false
        deploy: cmd
        cmd: |-
          helm repo add ibm-charts https://raw.githubusercontent.com/IBM/charts/master/repo/stable/
          helm install --name default --set autoscaling.enabled=true --set autoscaling.minReplicas=2 ibm-charts/ibm-open-liberty --debug
          kubectl apply -f https://raw.githubusercontent.com/jelastic-jps/kubernetes/master/addons/openliberty.yaml 

  - script: |
      var resp = jelastic.env.control.GetEnvInfo("${settings.envName}", session);
      return {result:0, startPage: "http" + (resp.env.sslstate ? "s" : "") + "://" + resp.env.domain}      
  - setGlobals:
        startPage: ${response.startPage}        
startPage: ${globals.startPage}
success: 
	/texts/success.md
